dnl Process this file with autoconf to produce a configure script.
AC_PREREQ(2.7)dnl
AC_INIT(README)

if test "${enable_shared}" = "yes" ; then
    echo "Shared libraries not supported for cross compiling, ignored"
fi

AC_PROG_INSTALL

AC_CANONICAL_SYSTEM

# FIXME: We temporarily define our own version of AC_PROG_CC.  This is
# copied from autoconf 2.12, but does not call AC_PROG_CC_WORKS.  We
# are probably using a cross compiler, which will not be able to fully
# link an executable.  This should really be fixed in autoconf
# itself.

AC_DEFUN(LIB_AC_PROG_CC,
[AC_BEFORE([$0], [AC_PROG_CPP])dnl
AC_CHECK_PROG(CC, ${target_alias}-gcc, ${target_alias}-gcc)
test -z "$CC" && AC_MSG_ERROR([no acceptable cc found in \$PATH])
AC_PROG_AWK
AC_PROG_CC_GNU

if test $ac_cv_prog_gcc = yes; then
  GCC=yes
dnl Check whether -g works, even if CFLAGS is set, in case the package
dnl plays around with CFLAGS (such as to build both debugging and
dnl normal versions of a library), tasteless as that idea is.
  ac_test_CFLAGS="${CFLAGS+set}"
  ac_save_CFLAGS="$CFLAGS"
  CFLAGS=
  AC_PROG_CC_G
  if test "$ac_test_CFLAGS" = set; then
    CFLAGS="$ac_save_CFLAGS"
  elif test $ac_cv_prog_cc_g = yes; then
    CFLAGS="-g -O2"
  else
    CFLAGS="-O2"
  fi
else
  GCC=
  test "${CFLAGS+set}" = set || CFLAGS="-g"
fi
])

LIB_AC_PROG_CC

case "${target}" in
  arm-*-elf*)
	archdir="arm";
        boards="pid aeb-1";
	NEED_UNDERSCORE="";
	;;
  arm-*-coff*)
	archdir="arm";
        boards="pid aeb-1";
	NEED_UNDERSCORE="-DNEED_UNDERSCORE";
	;;
  strongarm-*-elf*)
	archdir="arm";
        boards="brutus ebix-db ebsa285 sa1100-multimedia";
	NEED_UNDERSCORE="";
	;;
  strongarm-*-coff*)
	archdir="arm";
        boards="brutus ebix-db ebsa285 sa1100-multimedia";
	NEED_UNDERSCORE="-DNEED_UNDERSCORE";
	;;
  fr30-*-elf)
	archdir="fr30";
        boards="eval1";
	;;
  powerpc-*-eabi)
	archdir="ppc";
        boards="cma101 mbx evb403";
	;;
  mn10300-*-*)
	archdir="am30";
        boards="eval1";
	NEED_UNDERSCORE="-DNEED_UNDERSCORE";
	;;
  mips*tx39*-elf)
	archdir="mips"
	boards="dve39 jmr3904"
	SYSCALL_UNDERSCORE="-DMISSING_SYSCALL_NAMES";
	;;
  m68k-*-elf)
	archdir="m68k";
        boards="328ads";
	;;
  m68k-*-coff)
	archdir="m68k";
        boards="328ads";
	;;
  sparclite-*-elf)
	archdir="sparc";
        boards="mb8683x";
	SYSCALL_UNDERSCORE="-DMISSING_SYSCALL_NAMES";
	;;
esac

if test -f ../../binutils/objcopy ; then
    OBJCOPY=../../../binutils/objcopy;
else
    OBJCOPY=${target_alias}-objcopy
fi

if test -f ../../binutils/objdump ; then
    OBJDUMP=../../../binutils/objdump;
else
    OBJDUMP=${target_alias}-objdump
fi

OUTPUT="Makefile:Makefile.in"
MAKEFILES="Makefile"
MAKEFILEDEPS="Makefile.in common/common.mk ${archdir}/cpu.mk"
for x in $boards
do
	OUTPUT=${OUTPUT}" "${x}/Makefile":"${archdir}/cpu.mk ;
	OUTPUT=${OUTPUT}":"${archdir}/${x}/board.mk ;
	OUTPUT=${OUTPUT}":"common/common.mk ;
	MAKEFILES=${MAKEFILES}" "${x}/Makefile ;
	MAKEFILEDEPS=${MAKEFILEDEPS}" "${archdir}/${x}/board.mk ;
done

subdirs="$boards"

AC_SUBST(subdirs)
AC_SUBST(archdir)
AC_SUBST(MAKEFILES)
AC_SUBST(MAKEFILEDEPS)
AC_SUBST(srcdir)
AC_SUBST(CC)
AC_SUBST(AR)
AC_SUBST(OBJCOPY)
AC_SUBST(OBJDUMP)
AC_SUBST(NEED_UNDERSCORE)
AC_SUBST(SYSCALL_UNDERSCORE)

AC_OUTPUT($OUTPUT)

